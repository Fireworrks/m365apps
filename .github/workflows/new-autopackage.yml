# Creates a Microsoft 365 Apps package and optionally imports into a target Intune tenant
# Uses secrets on the repo - TENANT_ID, CLIENT_ID, and CLIENT_SECRET
# to import the package into a target tenant
name: New package and import

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      configuration:
        description: Configuration XML file to include in the package.
        required: true
        default: O365ProPlusVisioProRetailProjectProRetail.xml

jobs:
  import-package:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Test configuration file path
        id: test-config
        shell: powershell
        working-directory: "${{ github.workspace }}"
        run: |
          Test-Path -Path "${{ github.workspace }}\configs\${{ github.event.inputs.configuration }}"

      - name: Install and cache PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v5.2
        with:
          modules-to-cache: "MSAL.PS::, PSIntuneAuth::, AzureAD::, IntuneWin32App::, Microsoft.Graph.Intune::"
          updatable: true
          shell: powershell

      - name: Create package and import
        id: create-package
        shell: powershell
        working-directory: "${{ github.workspace }}"
        run: |
          $params = @{
              Path              = "${{ github.workspace }}"
              ConfigurationFile  = "${{ github.workspace }}\configs\${{ github.event.inputs.configuration }}"
              Channel           = "MonthlyEnterprise"
              CompanyName       = "stealthpuppy"
              TenantId          = "${{ secrets.TENANT_ID }}"
              ClientId          = "${{ secrets.CLIENT_ID }}"
              ClientSecret      = "${{ secrets.CLIENT_SECRET }}"
              Import            = $true
              Verbose           = $true
          }
          & "${{ github.workspace }}\New-Microsoft365AppsPackage.ps1" @params

      - name: Copy package
        id: copy-package
        shell: pwsh
        working-directory: "${{ github.workspace }}"
        run: |
          $Release = "$(Get-Date -Format yyyyMMdd).$(${{ github.run_number }})"
          New-Item -Path "${{ github.workspace }}\packages\$Release" -ItemType "Directory" -ErrorAction "SilentlyContinue"
          Copy-Item -Path "${{ github.workspace }}\output\setup.intunewin" -Destination "${{ github.workspace }}\packages\$Release\setup.intunewin"
          Copy-Item -Path "${{ github.workspace }}\configs\${{ github.event.inputs.configuration }}" -Destination "${{ github.workspace }}\packages\$Release\${{ github.event.inputs.configuration }}"

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPGKEY }}
          passphrase: ${{ secrets.GPGPASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
          git_tag_gpgsign: true
          git_push_gpgsign: false
          git_committer_name: ${{ secrets.COMMIT_NAME }}
          git_committer_email: ${{ secrets.COMMIT_EMAIL }}

      - name: Set release
        id: release
        run: echo "::set-output name=release::$(Get-Date -Format yyyyMMdd).${{ github.run_number }}"

      - name: Upload artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: m365-package-${{ steps.release.outputs.release }}
          path: |
            ${{ github.workspace }}/packages/${{ steps.release.outputs.release }}/*
